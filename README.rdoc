= ayl

A small framework to support asynchronous method calls in Ruby.

== Description

ayl (At Your Leisure or As You Like or ...) is a small framework that simplifies the process of implementing
asynchronous method calls in Ruby. Fundamentally, it works by handing off a method call to be executed in a 
separate processing thread (maybe a thread, maybe a separate process, etc.).

The actual implementation of the code that executes the methods has been abstracted away from the general
framework. You can implement any "Engine" you like to provide the asynchronous functionality. A reference
implementation of an engine using beanstalk ({beanstalkd}[http://kr.github.com/beanstalkd/], {beanstalk-client}[http://beanstalk.rubyforge.org/] as a 
as a queuing mechanism is provided to give you a leg up. If you decide to use a different mechanism, you
can simply provide an implementation of the Ayl::Engine interface (described below).

== Implementing an Async Engine

Implementing an asynchronous engine is relatively straightforward.

First, implement a Ruby class that provides the following public methods:

  class MyEngine
    #
    # Return true if this engine provides asynchronous support (engines can be synchronous)
    #
    def asynchronous?
      ...
    end

    # 
    # Return true if this engine is currently connected. The definition of connected
    # will depend on how the engine is implemented. With beanstalkd, for example, if
    # the engine has successfully connected to the beanstalk server, this method
    # would return true.
    # 
    def is_connected?
      ...
    end

    # 
    # Submits an instance of an Ayl::Message to the engine.
    #
    def submit(message)
      ...
    end

  end

== Contributing to ayl
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 j0hnds@gmail.com. See LICENSE.txt for
further details.

